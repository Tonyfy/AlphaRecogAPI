#ifndef ARECOG_H__
#define ARECOG_H__
#include <vector>
#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>
//#include "mysqlCPP.h"

typedef struct AlphaFeature
{
	/** 特征大小 */
	int feature_size;	
	/** 人脸特征指针 */
	vector<float> feature(feature_size);
}AFeature;


class ARECOG
{
public:
	RECOG()=default;
	~RECOG()=default;

	/*
	*初始化，初始化系统所需的模型等。
	*/
	virtual int A_Init(const char *modelpath)=0;
	virtual int A_UnInit() = 0;

	/**
	* 图片人脸检测
	* @param [in] image  待检测图片
	* @param [out] list_size 人脸个数
	* @param [out] face_rect_list 人脸位置列表
	* @param [in] method 人脸检测方法（0正脸检测，1侧脸检测）
	* @return 返回是否成功
	*  0 表示成功
	*  -1 表示失败
	*/
	virtual int AFaceProcess_Facedetect(const cv::Mat& image, int& list_size,
		std::vector<cv::Rect> &face_rect_list, int method = 0) = 0;
	
	/*
	*依据人脸框，对图片中的人脸进行关键点标注。
	*/
	virtual int AFaceProcess_Landmark(cv::Mat& gray, cv::Rect& r) = 0;

	/*
	*获得图片中的某张人脸的标准化人脸，经历了旋正和标准化的过程。
	*该人脸的内存在函数内分配，调用之后要使用EFaceProcess_FreeImage释放face的内存。
	*/
	virtual int AFaceProcess_Getface(cv::Mat& image, cv::Rect& facerect, cv::Mat& face) = 0;

	/*
	*获得人脸特征的维度
	*/
	virtual int AFaceProcess_GetFeatureParam(int& feature_size) = 0;

	
	/*
	*获取原图中某个人脸的特征，需事先分配好特征内存。
	*/
	virtual int AFaceProcess_GetFaceFeature(cv::Mat& image, cv::Rect& facerect,AFeature& feature) = 0;

	/*
	*获得Mat类型图像的特征，需要事先分配好特征的内存。
	*face必须是灰度图片
	*/
	virtual int AFaceProcess_GetFaceFeature(cv::Mat& face, AFeature& feature) = 0;

	///**
	//* 特征比对 比较两个特征的相似度
	//* @param [in] query_feature 特征1信息
	//* @param [in] ref_feature 特征2信息
	//* @param [out] similarity相似度
	//* @return 返回是否成功
	//*  0 表示成功
	//*  -1 表示失败
	//*/
	virtual int AFaceProcess_FeatureCompare(const AFeature& query_feature,
		const AFeature& ref_feature, double& similarity) = 0;

	virtual int AFaceProcess_ReadImage(const std::string &imgpath, cv::Mat& img) = 0;

	virtual int AFaceProcess_SaveImage(const cv::Mat& eimg, std::string& savepath) = 0;
	/*
	*释放图片的内存空间
	*/
	virtual int AFaceProcess_FreeImage(cv::Mat& image) = 0;

public:

};

#endif //RECOG_H__